hispanic <- as.factor(hispanic)
levels(hispanic) <- c("Not Hispanic", "Hispanic")
age <- r1dintvwrage
income <- ia1totinc
gender <- matrix(nrow=n.obs)
gender[r1dgendr==2] <- 0
gender[r1dgendr==1] <- 1
gender <- as.factor(gender)
levels(gender) <- c("Female", "Male")
hispanic <- matrix(nrow=n.obs)
hispanic[rl1hisplatno==2] <- 0
hispanic[rl1hisplatno==1] <- 1
hispanic <- as.factor(hispanic)
levels(hispanic) <- c("Not Hispanic", "Hispanic")
age <- r1dintvwrage
income <- ia1totinc
gender <- matrix(nrow=n.obs)
gender[r1dgendr==2] <- 0
gender[r1dgendr==1] <- 1
gender <- as.factor(gender)
levels(gender) <- c("Female", "Male"
)
gender <- matrix(nrow=n.obs)
gender[r1dgender==2] <- 0
gender[r1dgender==1] <- 1
gender <- as.factor(gender)
levels(gender) <- c("Female", "Male")
married <- matrix(nrow=n.obs)
married[hh1martlstat==1] <- 1
married[(hh1martlstat==3 | hh1martlstat==4 | hh1martlstat==5 | hh1martlstat==6)] <- 0
table(married)
?table
table(married, useNA=T)
table(married, useNA="ifany")
married <- as.factor(married)
levels(married) <- c("Not Married", "Married")
table(married, useNA="ifany")
smoking <- matrix(nrow=n.obs)
smoking[sd1smokedreg==2 & sd1smokesnow==-1] <- 0
smoking[sd1smokedreg==1 & sd1smokesnow==2] <- 1
smoking[sd1smokesnow==-1] <- 2
table(smoking, useNA="ifany")
smoking <- matrix(nrow=n.obs)
smoking[sd1smokedreg==2 & sd1smokesnow==-1] <- 0
smoking[sd1smokedreg==1 & sd1smokesnow==2] <- 1
smoking[sd1smokesnow==1] <- 2
table(smoking, useNA="ifany")
smoking <- as.factor(smoking)
levels(smoking) <- c("Never", "Former", "Current")
table(smoking, useNA="ifany")
bmi <- (hw1currweigh / heightininches^2)*703
bmi[(is.na(hw1currweight) | is.na(hw1howtallin))] <- NA
bmi4cat[bmi < 18.5] <- 0
bmi4cat[bmi >= 18.5 & bmi < 25] <- 1
bmi4cat[bmi >= 25 & bmi < 30] <- 1
bmi4cat[bmi >= 30] <- 1
bmi4cat[is.na(bmi)] <- NA
NA
NA*12
feettoinches <- hw1howtallft*12
heightininches <- feettoinches + hw1howtallin
bmi <- (hw1currweigh / heightininches^2)*703
bmi[(is.na(hw1currweight) | is.na(hw1howtallin))] <- NA
bmi4cat[bmi < 18.5] <- 0
bmi4cat[bmi >= 18.5 & bmi < 25] <- 1
bmi4cat[bmi >= 25 & bmi < 30] <- 1
bmi4cat[bmi >= 30] <- 1
bmi4cat[is.na(bmi)] <- NA
bmi[(is.na(hw1currweigh) | is.na(hw1howtallin))] <- NA
bmi4cat[bmi < 18.5] <- 0
bmi4cat[bmi >= 18.5 & bmi < 25] <- 1
bmi4cat[bmi >= 25 & bmi < 30] <- 1
bmi4cat[bmi >= 30] <- 1
bmi4cat[is.na(bmi)] <- NA
bmi4cat <- matrix(nrow=n.obs)
bmi4cat[bmi < 18.5] <- 0
bmi4cat[bmi >= 18.5 & bmi < 25] <- 1
bmi4cat[bmi >= 25 & bmi < 30] <- 1
bmi4cat[bmi >= 30] <- 1
bmi4cat[is.na(bmi)] <- NA
table(bmi4cat, useNA="ifany")
bmi4cat <- matrix(nrow=n.obs)
bmi4cat[bmi < 18.5] <- 0
bmi4cat[bmi >= 18.5 & bmi < 25] <- 1
bmi4cat[bmi >= 25 & bmi < 30] <- 2
bmi4cat[bmi >= 30] <- 3
bmi4cat[is.na(bmi)] <- NA
table(bmi4cat, useNA="ifany")
bmi4cat <- as.factor(bmi4cat)
levels(bmi4cat) <- c("Underweight", "Normal", "Overweight", "Obese")
table(bmi4cat, useNA="ifany")
table(phys.act)
table(phys.act, race)
race.eth <- matrix(nrow=n.obs)
race.eth[race==0 & hispanic==0] <- 0
race.eth[race==1 & hispanic==0] <- 1
table(race.eth, useNA="ifany")
race.eth <- matrix(nrow=n.obs)
race.eth[race==0 && hispanic==0] <- 0
race.eth[race==1 && hispanic==0] <- 1
table(race.eth, useNA="ifany")
which(race==0 & hispanic==0)
race
race=="White"
race.eth <- matrix(nrow=n.obs)
race.eth[race=="White" && hispanic=="Not Hispanic"] <- 0
race.eth[race=="AA" && hispanic=="Hispanic"] <- 1
table(race.eth, useNA="ifany")
which(race=="White")
which(race=="White" & hispanic=="Not Hispanic")
race.eth <- matrix(nrow=n.obs)
race.eth[race=="White" & hispanic=="Not Hispanic"] <- 0
race.eth[race=="AA" & hispanic=="Not Hispanic"] <- 1
table(race.eth, useNA="ifany")
table(phys.act)
table(phys.act, race.eth)
chisq.test(phys.act, race.eth)
qplot(income, geom="histogram", facets=.~race.eth)
library(ggplot2)
qplot(income, geom="histogram", facets=.~race.eth)
qplot(log(income), geom="histogram", facets=.~race.eth)
?qplot
qplot(race, income, geom="boxplot")
qplot(race.eth, income, geom="boxplot")
qplot(race, income, geom="boxplot")
qplot(race.eth, income, geom="boxplot")
qplot(race, income, geom="boxplot")
qplot(race, log(income), geom="boxplot")
which(race==4 & !is.na(income))
which(race=="Asian" & !is.na(income))
which(race=="Asian")
table(race)
race <- matrix(nrow=n.obs)
race[rl1yourrace1==1] <- 0
race[rl1yourrace2==1] <- 1
race[rl1yourrace3==1] <- 2
race[rl1yourrace4==1] <- 3
race[rl1yourrace5==1] <- 4
race[rl1yourrace6==1] <- 5
race[rl1yourrace7==1] <- 6
race[rl1yourrace8==1] <- 7
table(race, useNA="ifany")
race <- as.factor(race)
levels(race) <- c("White", "AA", "NativeAm", "Asian", "NativeHawaii", "PacIsl", "Other")
qplot(race, income, geom="boxplot")
qplot(race, log(income), geom="boxplot")
t.test(income ~ race.eth)
source('~/.active-rstudio-document', echo=TRUE)
?lm
data()
data(cars)
names(cars)
qqnorm(cars$speed)
qqnorm(cars$dist)
hist(cars$speed)
hist(cars$dist)
fit <- lm(speed ~ dist, data=cars)
fit
names(fit)
confint(fit)
data(esoph)
head(esoph)
rm(esoph)
data(sleep)
head(sleep)
rm(sleep)
library(ggplot2)
data()
data(diamonds)
head(diamonds)
hist(carat)
hist(diamonds$carat)
n.obs <- dim(diamonds)[1]
big <- matrix(nrow=n.obs)
big[diamonds$carat < 0.5] <- 0
big[diamonds$carat >= 0.5] <- 1
big
table(big)
big <- matrix(nrow=n.obs)
big[diamonds$carat < 1] <- 0
big[diamonds$carat >= 1] <- 1
table(big)
?glm
head(diamonds)
class(diamonds$cut)
logit.fit <- glm(big ~ cut, data=diamonds, family="binomial"(link="logit"))
logit.fit
exp(logit.fit$coef)
exp(confint(logit.fit))
table(diamonds$cut)
head(diamonds$cut)
summary(logit.it)
summary(logit.fit)
head(diamonds)
summary(price)
summary(diamonds$price)
summary(diamonds$table)
boxplot(diamonds$table)
log.fit <- glm(table ~ cut, data=diamonds, family="poisson"(link="log"))
warnings()
head(diamonds)
hist(diamonds$price)
qqplot(diamonds$price, rpois(1))
qqplot(diamonds$price, rpois(10000, lambda=1))
qqplot(diamonds$price, rpois(10000, lambda=10))
qqplot(diamonds$price, rpois(10000, lambda=100))
qqplot(diamonds$price, rpois(10000, lambda=1000))
?glm
same.linear.fit <- glm(speed ~ dist, data=cars, family="gaussian"(link="identity"))
same.linear.fit
linear.fit
linear.fit <- glm(speed ~ dist, data=cars)
linear.fit
data(midwest)
head(midwest)
hist(midwest$poptotal)
boxplot(midwest$poptotal)
table(midwest$inmetro)
table(midwest$state)
table(midwest$popblack)
hist(midwest$popblack)
hist(log(midwest$popblack))
qqplot(log(midwest$popblack), rpois(10000, lambda=100))
qqplot(midwest$popblack, rpois(10000, lambda=100))
qqplot(midwest$popblack, rpois(10000, lambda=10000))
qqplot(log(midwest$popblack), rpois(10000, lambda=100))
qqplot(log(midwest$popblack), rnorm(10000))
test <- glm(log(popblack) ~ percadultpoverty, data=midwest, family="poisson")
test <- glm(popblack ~ percadultpoverty, data=midwest, family="poisson")
test
summary(test)
qqplot(log(midwest$popblack), rnorm(10000))
test <- glm(log(popblack) ~ percadultpoverty, data=midwest, family="gaussian")
logpopblack <- log(midwest$popblack)
test <- glm(logpopblack ~ percadultpoverty, data=midwest, family="gaussian")
head(midwest)
data()
data(women)
head(women)
dim(women)
rm(women)
data(mpg)
head(mpg)
qqplot(mpg$cty, rpois(10000, lambda=20))
qqplot(mpg$cty, rpois(10000, lambda=50))
dim(mpg)
class(mpg$trans)
mean(cty)
mean(mpg$cty)
var(mpg$cty)
hist(mpg$cty)
qqnorm(log(mpg$cty))
qqnorm(log(mpg$hwy))
qqplot(mpg$hwy, rpois(10000, lambda=50))
qqplot(mpg$hwy, rpois(10000, lambda=100))
library(gee)
install.packages("gee")
install.packages("geepack")
require(geepack)
linear.fit.gee <- geeglm(speed ~ dist, data=cars, family="gaussian", corstr="independence")
data()
wages <- read.table("http://www.ats.ucla.edu/stat/r/examples/alda/data/wages_pp.txt", header=T, sep=",")
head(wages)
hist(wages$lnw)
hist(wages$exper)
linear.fit.gee <- geeglm(lnw ~ exper, data=wages, family="gaussian", corstr="independence")
linear.fit.gee <- geeglm(lnw ~ exper, id=id data=wages, family="gaussian", corstr="independence")
linear.fit.gee <- geeglm(lnw ~ exper, id=id, data=wages, family="gaussian", corstr="independence")
linear.fit.gee
gee.ind <- geeglm(lnw ~ exper, id=id, data=wages, family="gaussian", corstr="independence")
(gee.ind <- geeglm(lnw ~ exper, id=id, data=wages, family="gaussian", corstr="independence"))
(gee.exch <- geeglm(lnw ~ exper, id=id, data=wages, family="gaussian", corstr="independence"))
summary(gee.ind)
(gee.exch <- geeglm(lnw ~ exper, id=id, data=wages, family="gaussian", corstr="exchangeable"))
(gee.ind <- geeglm(lnw ~ exper, id=id, data=wages, family="gaussian", corstr="independence"))
summary(gee.ind)
summary(gee.exch)
head(wages)
install.packages("drm")
data(marijuana)
data()
data(respiratory)
head(respiratory)
table(outcome)
table(respiratory$outcome)
class(respiratory$treatment)
class(respiratory$treat)
summary(linear.fit)
summary(lm(formula = speed ~ dist, data = cars))
?lm
sin(1:10)
x <- sin(1:10)
y <- rnorm(10)
fm <- lm(y ~ x)
fm
install.packages("sandwich")
require(sandwich)
summary(fm)
sandwich(fm)
sandwich(gee.exch)
summary(gee.exch)
summary(logit.fit)
sandwich(logit.fit)
sandwich(linear.fit)
sandwich(logit.fit)
linear.fit
summary(linear.fit)
linear.fit <- lm(speed ~ dist, data=cars)
summary(linear.fit)
qnorm(0.975)
qnorm(0.2)
qnorm(0.8)
?wald.test
install.packages("aod")
library(aod)
linear.fit
wald.test(b = coef(linear.fit), Sigma = vcov(linear.fit), Terms=2)
summary(linear.fit)
logit.fit
l <- cbind(0, 1, 0, 0, -1)
wald.test(b = coef(logit.fit), Sigma = vcov(logit.fit), L = l)
?wald.test
install.packages("pwr")
require(pwr)
pwr.t.test(n=100, d=5, sig.level=0.05, type="two.sample")
pwr.t.test(n=10, d=5, sig.level=0.05, type="two.sample")
pwr.t.test(n=1, d=5, sig.level=0.05, type="two.sample")
pwr.t.test(n=2, d=5, sig.level=0.05, type="two.sample")
pwr.t.test(n=2, d=0.5, sig.level=0.05, type="two.sample")
pwr.t.test(n=20, d=0.5, sig.level=0.05, type="two.sample")
pwr.t.test(n=100, d=0.5, sig.level=0.05, type="two.sample")
pwr.t.test(power=0.8, d=0.5, sig.level=0.05, type="two.sample")
pwr.anova.test(k=3, f=0.1, power=0.8, sig.level=0.05)
pwr.anova.test(k=3, f=0.1, power=0.5, sig.level=0.05)
summary(pwr.anova.test(k=3, f=0.1, power=0.5, sig.level=0.05))
pwr.t2n.test(d=5, sig.level=0.05, power=0.8)
pwr.t2n.test(d=5, sig.level=0.05, power=0.8, n1=100)
pwr.t2n.test(n1=100, d=5, sig.level=0.05, power=0.8)
pwr.t2n.test(n1=100, d=0.5, sig.level=0.05, power=0.8)
lm(speed ~ dist, data=cars)
summary(lm(speed ~ dist, data=cars))
logit.fit
linear.fit
require(ggplot2)
data(diamonds)
data(cars)
logit.fit <- glm(big ~ cut, data=diamonds,
family="binomial"(link="logit"))
same.logit.fit <- glm(big ~ cut, data=diamonds,
family="binomial")
linear.fit <- glm(speed ~ dist, data=cars)
same.linear.fit <- glm(speed ~ dist, data=cars,
family="gaussian"(link="identity"))
n.obs <- dim(diamonds)[1]
big <- matrix(nrow=n.obs)
big[diamonds$carat < 1] <- 0
big[diamonds$carat >= 1] <- 1
logit.fit <- glm(big ~ cut, data=diamonds,
family="binomial"(link="logit"))
linear.fit <- lm(speed ~ dist, data=cars)
linear.fit
logit.fit <- glm(big ~ cut, data=diamonds,
family="binomial"(link="logit"))
logit.fit <- glm(big ~ cut, data=diamonds,
family="binomial"(link="logit"))
same.logit.fit <- glm(big ~ cut, data=diamonds,
family="binomial")
same.linear.fit <- glm(speed ~ dist, data=cars,
family="gaussian"(link="identity"))
require(geepack)
wages <- read.table("http://www.ats.ucla.edu/stat/r/examples/alda/data/wages_pp.txt", header=T, sep=",")
gee.ind <- geeglm(lnw ~ exper, id=id, data=wages,
family="gaussian", corstr="independence")
summary(gee.ind)
gee.exch <- geeglm(lnw ~ exper, id=id, data=wages,
family="gaussian", corstr="exchangeable")
summary(gee.exch)
summary(logit.fit)
names(logit.fit)
names(summary(logit.fit))
names(linear.fit)
names(summary(linear.fit))
summary(linear.fit)$fstatistic
summary(linear.fit)$cov.unscaled
install.packages("tree")
require(tree)
?tree
data(cpus, package="MASS")
cpus.ltr <- tree(log10(perf) ~ syct+mmin+mmax+cach+chmin+chmax, cpus)
cpus.ltr
summary(cpus.ltr)
plot(cpus.ltr)
ir.tr <- tree(Species ~., iris)
ir.tr
summary(ir.tr)
plot(ir.tr)
install.packages("rpart")
install.packages("rpart.plot")
require(rpart)
?rpart
fit <- rpart(Kyphosis ~ Age + Number + Start, data = kyphosis)
fit
summary(fit)
plot(fit)
text(fit)
plot(ir.tr)
text(ir.tr)
data(package="tree")
data(package="rpart")
data(car.test.frame)
head(car.test.frame)
tree.fit <- rpart(Reliability~Country+Mileage+Type, data=car.test.frame)
tree.fit
plot(tree.fit)
text(tree.fit)
install.packages("LogicReg")
?LogicReg
?logreg
require(LogicReg)
?logreg
data(package="LogicReg")
data(logreg.testdat)
head(logreg.testdat)
logic.fit <- logreg(resp=logreg.testdat[,1], bin=logreg.testdat[,2:21], type=2, select=1, ntrees=5, nleaves=10)
plot(logic.fit)
summary(logic.fit)
logic.fit
myanneal <- logreg.anneal.control(start = -1, end = -4, iter = 500, update = 100)
fit1 <- logreg(resp = logreg.testdat[,1], bin=logreg.testdat[, 2:21], type = 2,
select = 1, ntrees = 2, anneal.control = myanneal)
plot(fit1)
it1
fit1
install.packages("randomForest")
require(randomForest)
data(package="randomForest")
data(imports85)
head(imports85)
?randomForest
data(iris)
head(iris)
randomForest(cityMpg ~ horsepower+numOfCylinders+fuelType+bodyStyle, data=imports85, mtry=4, importance=TRUE)
rf.fit <- randomForest(cityMpg ~ horsepower+numOfCylinders+fuelType+bodyStyle, data=imports85)
rf.fit <- randomForest(cityMpg ~ horsepower+numOfCylinders+fuelType+bodyStyle, data=imports85mtry=4, importance=TRUE, na.action=na.omit)
rf.fit <- randomForest(cityMpg ~ horsepower+numOfCylinders+fuelType+bodyStyle, data=imports85mtry=4, importance=TRUE, na.action=na.omit)
rf.fit <- randomForest(cityMpg ~ horsepower+numOfCylinders+fuelType+bodyStyle, data=imports85, mtry=4, importance=TRUE, na.action=na.omit)
rf.fit
plot(rf.fit)
getTree(rf.fit)
plot.rf.tree(rf.fit)
MDSplot(rf.fit)
getTree(rf.fit)
plot(getTree(rf.fit))
MDSplot(rf.fit, imports85$cityMpg)
varImpPlot(rf.fit)
partialPlot(rf.fit)
partialPlot(imports85$cityMpg, rf.fit)
plot.randomForest(rf.fit)
rf.fit
data(package="rpart")
data(package="rpart")
data(stagec)
head(stagec)
data(kyphosis)
head(kyphosis)
head(car.test.frame)
tree.fit
View(kyphosis)
plot(tree.fit)
plot(tree.fit)
rf.fit
tree.fit
setwd("C:/Users/owner/Dropbox/Ph.D/Intro Data Analysis Course/Sample Code")
library(foreign)
dat <- read.xport("demo_e.xpt")
variables <- c("SEQN", "RIDAGEMN", "RIDRETH1", "DMDEDUC2", "DMDMARTL")
new.dat <- dat[,variables]
head(new.dat)
new.dat[new.dat$DMDEDUC2==7 | new.dat$DMDEDUC2==7, "DMDEDUC2"]
new.dat[new.dat$DMDEDUC2==7 | new.dat$DMDEDUC2==9, "DMDEDUC2"]
which(new.dat$DMDEDUC2==7)
which(new.dat$DMDEDUC2==9)
new.dat[,"RIDAGEMN"]
which(!is.na(new.dat[,"RIDAGEMN"]) & (new.dat[,"RIDAGEMN"] < lower.limit | new.dat[,"RIDAGEMN"] > upper.limit))
# Load the necessary package to open the SAS data file.
library(foreign)
# Load the data file into R.
dat <- read.xport("demo_e.xpt")
# Save the names of the desired variables as strings.
variables <- c("SEQN", "RIDAGEMN", "RIDRETH1", "DMDEDUC2", "DMDMARTL")
# Create a new data set with only the desired variables and the ID for each subject.
new.dat <- dat[,variables]
# Save the number of subjects in the data set.
n.obs <- dim(new.dat)[1]
# Create matrices to hold the indicator for Hispanic ethnicity
# and the new education variables.
hispanic <- matrix(nrow=n.obs)
education <- matrix(nrow=n.obs)
# Create vector to hold indices for underage subjects that may
# be in illegal relationships and a vector to hold indices for
# subjects with age values considered outliers.
illegal.status <- c()
age.outliers <- c()
# Define cutoffs for outliers for age.
quantiles <- summary(new.dat$RIDAGEMN)
iqr <- as.numeric(quantiles[5] - quantiles[2])
upper.limit <- as.numeric(quantiles[5] + 1.5*iqr)
lower.limit <- as.numeric(quantiles[2] - 1.5*iqr)
which(!is.na(new.dat[,"RIDAGEMN"]) & (new.dat[,"RIDAGEMN"] < lower.limit | new.dat[,"RIDAGEMN"] > upper.limit))
which(new.dat[,"RIDAGEMN"] < lower.limit | new.dat[,"RIDAGEMN"] > upper.limit)
which(new.dat[i, "RIDAGEMN"] < 216 & new.dat[i, "DMDMARTL"] != 5)
which(new.dat[,"RIDAGEMN"] < 216 & new.dat[,"DMDMARTL"] != 5)
